#!/bin/bash
if [ "${G_BOTBREW}" = "" ]; then kill -SIGINT $$; fi

PACKAGE_NAME=$(basename $(pwd))
PACKAGE_VERSION=1.9.3-p125
PACKAGE_DEPEND=( readline ncurses libiconv openssl gdbm libffi libyaml )

FULLNAME=${PACKAGE_NAME}-${PACKAGE_VERSION}
ARCHIVE=${FULLNAME}.tar.gz

botbrew_do_build() {
	botbrew_download https://cache.ruby-lang.org/pub/ruby/${PACKAGE_VERSION:0:3}/${ARCHIVE} ${ARCHIVE}
	botbrew_unpack ${ARCHIVE} ${FULLNAME} || true
	botbrew_copytree ${FULLNAME}/${FULLNAME} ${G_SOURCE} || true
	botbrew_fix_config ${G_SOURCE}/tool
	botbrew_patchtree -p0 ${G_SOURCE} patch/ruby-1.9.3-android.patch
	botbrew_import
	botbrew_fix_crosslibconfig ${G_SYSDIR}/bin/ncurses5-config
	if ! [ -e ${G_OBJECT}/Makefile ]; then
		(
			mkdir -p ${G_OBJECT}; cd ${G_OBJECT}
			CPPFLAGS="-I${G_INCDIR} ${G_CPPFLAGS}" CFLAGS="${G_ALL_CFLAGS}" LDFLAGS="-L${G_LIBDIR}" \
			../${G_SOURCE}/configure ${G_SYSTEMPREFIX[@]} --host=${G_TRIPLET} \
				--enable-shared --disable-ipv6 --disable-wide-getaddrinfo --disable-install-rdoc
		)
	fi
	if ! [ -e ${G_EXPORT}/.d ]; then
		${G_MAKE} -C ${G_OBJECT}
		${G_MAKE} -C ${G_OBJECT} install DESTDIR=$(pwd)/${G_EXPORT}
		${G_STRIP} --strip-unneeded ${G_EXP_BINDIR}/* $(find ${G_EXPORT} -type f -name '*.so*') || true
		touch ${G_EXPORT}/.d
	fi
}
